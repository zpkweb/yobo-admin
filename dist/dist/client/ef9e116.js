(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{455:function(e,t,n){"use strict";n.r(t);n(46),n(15);var r=n(3);function o(e,t){var n;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(n=function(e,t){if(!e)return;if("string"==typeof e)return c(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return c(e,t)}(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var i=0,r=function(){};return{s:r,n:function(){return i>=e.length?{done:!0}:{done:!1,value:e[i++]}},e:function(e){throw e},f:r}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,d=!0,l=!1;return{s:function(){n=e[Symbol.iterator]()},n:function(){var e=n.next();return d=e.done,e},e:function(e){l=!0,o=e},f:function(){try{d||null==n.return||n.return()}finally{if(l)throw o}}}}function c(e,t){(null==t||t>e.length)&&(t=e.length);for(var i=0,n=new Array(t);i<t;i++)n[i]=e[i];return n}var d={watch:{"$route.query":"$fetch"},data:function(){return{defaultProps:{children:"subMenu",label:"name"},checkedKeys:[]}},computed:{menuTree:function(){return this.$store.state.identityMenu}},fetch:function(){var e=this;return Object(r.a)(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,e.$axios.$get("/api/admin/identityList",{params:{"en-us":e.$route.params.type}});case 2:if(!(n=t.sent).success){t.next=15;break}if(!n.data.menu||" "==n.data.menu){t.next=11;break}return t.next=7,e.$store.commit("setIdentityMenu");case 7:return t.next=9,e.$store.commit("extendIdentityMenu",{identityMenu:e.$store.state.identityMenu,menu:JSON.parse(n.data.menu)});case 9:t.next=13;break;case 11:return t.next=13,e.$store.commit("setIdentityMenu");case 13:e.getCheckedNodes(e.$store.state.identityMenu),e.$refs.menuTree&&e.$refs.menuTree.setCheckedKeys(e.checkedKeys);case 15:case"end":return t.stop()}}),t)})))()},mounted:function(){this.$refs.menuTree.setCheckedKeys(this.checkedKeys)},methods:{onSubmit:function(){var e=this;return Object(r.a)(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,e.$axios.$post("/api/admin/identityList/update",{"en-us":e.$route.params.type,menu:JSON.stringify(e.menuTree)}).catch((function(t){e.$message({showClose:!0,message:"".concat(e.$t("content.update")).concat(e.$t("content.fail"),"! ").concat(t.response.data.message),type:"error"})}));case 2:(n=t.sent).success?e.$message({showClose:!0,message:"".concat(e.$t("content.update")).concat(e.$t("content.success")),type:"success"}):e.$message({showClose:!0,message:"".concat(e.$t("content.update")).concat(e.$t("content.fail"),"!").concat(n.message),type:"error"});case 4:case"end":return t.stop()}}),t)})))()},changeNodeCheck:function(data,e,t){var n=0;e&&!t?n=1:!e&&t&&(n=2),this.$store.commit("changeMenuChedked",{level:data.level,checked:n})},getCheckedNodes:function(data){var e,t=o(data);try{for(t.s();!(e=t.n()).done;){var n=e.value;n.subMenu&&this.getCheckedNodes(n.subMenu),1===n.checked&&this.checkedKeys.push(n.level)}}catch(e){t.e(e)}finally{t.f()}}}},l=n(14),component=Object(l.a)(d,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[n("el-tree",{ref:"menuTree",attrs:{data:e.menuTree,"show-checkbox":"","node-key":"level","check-on-click-node":"","default-expand-all":"","highlight-current":"",props:e.defaultProps},on:{"check-change":e.changeNodeCheck},scopedSlots:e._u([{key:"default",fn:function(t){var r=t.node,data=t.data;return n("span",{staticClass:"custom-tree-node"},[n("span",[n("i",{class:data.icon}),e._v(e._s(e.$t(r.label)))])])}}])}),e._v(" "),n("el-button",{attrs:{type:"primary"},on:{click:e.onSubmit}},[e._v("\n    "+e._s(e.$t("content.update"))+"\n  ")])],1)}),[],!1,null,"107a651e",null);t.default=component.exports}}]);